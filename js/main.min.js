$(document).ready((function(){var navBar=$(".fixed-top"),navigationUl=$("#navigationUl"),circle=$("#circle");function toggleNavigation(){$(window).scrollTop()>window.innerHeight?navBar.fadeOut("fast"):navBar.fadeIn("fast")}function toggleNavigationVisibility(){let lastActiveLink=localStorage.getItem("lastActiveLink"),activeLink,activeLinkParent=(lastActiveLink?$(`[href="${lastActiveLink}"]`):$('[href="#top"]')).parent();"none"==navBar.css("display")?(navBar.fadeIn("fast"),circle.css({width:"10px",height:"10px",left:`${activeLinkParent.position().left+activeLinkParent.width()/2}px`})):(navBar.fadeOut("fast"),circle.css({width:"52px",height:"52px",left:"30px"}))}function highlightActiveLink(){var sections=$("section"),scrollTop=$(window).scrollTop();if(sections.each((function(){var section=$(this),sectionTop=section.offset().top,sectionBottom=sectionTop+section.outerHeight();if(scrollTop>=sectionTop-200&&scrollTop<sectionBottom-200)return activeSection=section,!1})),navigationUl.find(".nav-bar-item").not(activeLink).removeClass("nav-active"),activeSection){var activeLink=navigationUl.find('a[href="#'+activeSection.attr("id")+'"]').parent();activeLink.addClass("nav-active"),activeLink.length&&circle.css("left",activeLink.position().left+activeLink.width()/2),localStorage.setItem("lastActiveLink",activeLink.find("a").attr("href"))}}let lastActiveLink=localStorage.getItem("lastActiveLink"),activeLink,activeLinkParent=(lastActiveLink?$(`[href="${lastActiveLink}"]`):$('[href="#top"]')).parent();circle.css("left",`${activeLinkParent.position().left+activeLinkParent.width()/2}px`),$(window).on("scroll",(function(){highlightActiveLink()})),$(window).on("resize",(function(){highlightActiveLink()})),$("#circle").on("click",(function(){toggleNavigationVisibility()}))}));const accordionHeaders=document.querySelectorAll("[data-accordion-header]");function scrollTrigger(selector,options={}){let els=document.querySelectorAll(selector);els=Array.from(els),els.forEach(el=>{addObserver(el,options)})}function addObserver(el,options){if(!("IntersectionObserver"in window))return void(options.cb?options.cb(el):entry.target.classList.add("active"));let observer;new IntersectionObserver((entries,observer)=>{entries.forEach(entry=>{if(entry.isIntersecting){if(options.cb)options.cb(el);else{entry.target.classList.add("active");const aaa=entry.target.getAttribute("aria-expanded");aaa&&console.log({aaa:aaa})}observer.unobserve(entry.target)}})},options).observe(el)}accordionHeaders.forEach(accordionHeader=>{accordionHeader.onclick=()=>{console.log("click");let target=accordionHeader.parentElement.nextElementSibling,expanded="true"===accordionHeader.getAttribute("aria-expanded")||!1;accordionHeader.setAttribute("aria-expanded",!expanded),target.hidden=expanded}}),scrollTrigger(".intro-text"),scrollTrigger(".scroll-reveal",{rootMargin:"-200px"});